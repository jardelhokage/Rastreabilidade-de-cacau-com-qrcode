/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MEIEIRO.telaCadastro;

import DAO.CadastroMeieirosDAO;
import DAO.LoginDAO;
import DAO.ValidadorCPF;
import Javabeans.CadastroMeieirosBEAB;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.HeadlessException;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.glxn.qrgen.QRCode;
import net.glxn.qrgen.image.ImageType;

/**
 *
 * @author jarde
 * @author Tiago Fochesatto
 */
public class TelaCadastroMeieiros extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaCadastroAluno
     */
    public TelaCadastroMeieiros() {
        initComponents();
       jLabel15.setVisible(false);
       CodigoQr.setVisible(false);
       BtnSalvar.setVisible(false);
    }
    //variáveis auxiliares:
    int erro,dterro,vzerro, intrg, d, m, a;
    String dia, mes, ano, strgSexo, strgSetor, strgRoca, jocmp = "Nome do campo*";
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbnome = new javax.swing.JLabel();
        lbcpf = new javax.swing.JLabel();
        txtnome = new javax.swing.JTextField();
        lbnasc = new javax.swing.JLabel();
        cbSexo = new javax.swing.JComboBox<String>();
        lbsexo = new javax.swing.JLabel();
        lbfone = new javax.swing.JLabel();
        lbsetor = new javax.swing.JLabel();
        lbroca = new javax.swing.JLabel();
        cbRoca = new javax.swing.JComboBox<String>();
        cbSetor = new javax.swing.JComboBox<String>();
        jLabel15 = new javax.swing.JLabel();
        CodigoQr = new javax.swing.JTextField();
        btnpassdata = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        QRtexto = new javax.swing.JTextArea();
        lbrg = new javax.swing.JLabel();
        fmtxtcpf = new javax.swing.JFormattedTextField();
        fmtxtfone = new javax.swing.JFormattedTextField();
        fmtxtnasc = new javax.swing.JFormattedTextField();
        txtrg = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        lblImagem = new javax.swing.JLabel();
        btnlimpar = new javax.swing.JButton();
        BtnSalvar = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cadastro de Meieiros");
        setPreferredSize(new java.awt.Dimension(718, 571));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(34, 41, 50));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Meieiro", javax.swing.border.TitledBorder.TRAILING, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Google Sans", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setAutoscrolls(true);
        jPanel1.setFocusable(false);

        lbnome.setForeground(new java.awt.Color(255, 255, 255));
        lbnome.setText("Nome:");

        lbcpf.setForeground(new java.awt.Color(255, 255, 255));
        lbcpf.setText("CPF:");

        txtnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnomeActionPerformed(evt);
            }
        });

        lbnasc.setForeground(new java.awt.Color(255, 255, 255));
        lbnasc.setText("Data de Nascimento:");

        cbSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "            ", "Masculino", "Feminino", "Outro" }));
        cbSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSexoActionPerformed(evt);
            }
        });

        lbsexo.setForeground(new java.awt.Color(255, 255, 255));
        lbsexo.setText("Sexo:");

        lbfone.setForeground(new java.awt.Color(255, 255, 255));
        lbfone.setText("Telefone:");

        lbsetor.setForeground(new java.awt.Color(255, 255, 255));
        lbsetor.setText("Setor");

        lbroca.setForeground(new java.awt.Color(255, 255, 255));
        lbroca.setText("Roça:");

        cbRoca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "            ", "A01", "A02", "A03", "A04", "A05", "A06", "A07", "A08", "A09", "A10", "A11", "A12", "A13", "A14", "A15", "A16", "A17", "A18", "A19", "A20", "A21", "A22", "A23", "A24", "A25" }));
        cbRoca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRocaActionPerformed(evt);
            }
        });

        cbSetor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "            ", "A", "B", "C" }));
        cbSetor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSetorActionPerformed(evt);
            }
        });

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("CÓDIGO DO FUNCIONÁRIO");

        CodigoQr.setEditable(false);
        CodigoQr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodigoQrActionPerformed(evt);
            }
        });

        btnpassdata.setText("PASSAR DADOS");
        btnpassdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpassdataActionPerformed(evt);
            }
        });

        QRtexto.setEditable(false);
        QRtexto.setBackground(new java.awt.Color(0, 0, 0));
        QRtexto.setColumns(20);
        QRtexto.setForeground(new java.awt.Color(102, 255, 0));
        QRtexto.setRows(5);
        jScrollPane1.setViewportView(QRtexto);

        lbrg.setForeground(new java.awt.Color(255, 255, 255));
        lbrg.setText("RG:");

        try {
            fmtxtcpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-###-###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            fmtxtfone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fmtxtfone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fmtxtfoneActionPerformed(evt);
            }
        });

        try {
            fmtxtnasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtnome)
                                    .addComponent(fmtxtcpf)
                                    .addComponent(lbnome)
                                    .addComponent(lbcpf)
                                    .addComponent(lbsetor)
                                    .addComponent(lbrg)
                                    .addComponent(cbSetor, 0, 246, Short.MAX_VALUE)
                                    .addComponent(jLabel15)
                                    .addComponent(CodigoQr))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtrg))
                        .addGap(72, 72, 72)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fmtxtnasc, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbnasc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbRoca, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnpassdata, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fmtxtfone, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbSexo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbroca, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbfone, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbsexo, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(346, 346, 346))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbnome)
                    .addComponent(lbnasc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fmtxtnasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbcpf)
                    .addComponent(lbsexo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fmtxtcpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbrg)
                    .addComponent(lbfone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fmtxtfone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtrg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbroca)
                    .addComponent(lbsetor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRoca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jLabel15)
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnpassdata)
                    .addComponent(CodigoQr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(34, 41, 50));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "QR code", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        lblImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lb5.gif"))); // NOI18N
        lblImagem.setText(".");
        lblImagem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        btnlimpar.setText("LIMPAR");
        btnlimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimparActionPerformed(evt);
            }
        });

        BtnSalvar.setText("SALVAR");
        BtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BtnSalvar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnlimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(41, 41, 41))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnlimpar)
                .addGap(18, 18, 18)
                .addComponent(BtnSalvar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnomeActionPerformed

    private void cbSetorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSetorActionPerformed
        // TODO add your handling code here:
        String cbSel = cbSetor.getSelectedItem().toString();
        
        //
    }//GEN-LAST:event_cbSetorActionPerformed

    private void btnpassdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpassdataActionPerformed
        //Passar Dados:
        //Verificação de erros:
        LoginDAO daoTeste = new LoginDAO();
            erro=0;
            dterro=0;
            vzerro=0; 
            strgSexo= "indefinido"; 
            strgSetor= "indefinido"; 
            strgRoca= "indefinido";
            
            if(cbSexo.getSelectedIndex()!=0){
                strgSexo = cbSexo.getSelectedItem().toString();
            }
            if(cbSetor.getSelectedIndex()!=0){
                strgSetor = cbSetor.getSelectedItem().toString();
            }
            if(cbRoca.getSelectedIndex()!=0){
                strgRoca = cbRoca.getSelectedItem().toString();
            }
            
            //Verifica se há algum campo em branco:
            //campo nome:
            if(txtnome.getText().isEmpty() || txtnome.getText().length()>50){
                lbnome.setText("Nome*:");
                lbnome.setForeground(java.awt.Color.red);
                
                vzerro = 1;
            }
            else{
                lbnome.setText("Nome:");
                lbnome.setForeground(java.awt.Color.white);
            } 
            //ComboBox sexo:
            if(strgSexo.equals("indefinido")){
                lbsexo.setText("Sexo*:");
                lbsexo.setForeground(java.awt.Color.red);
                erro=1;
            }
            else{
                lbsexo.setText("Sexo:");
                lbsexo.setForeground(java.awt.Color.white);
            }
            //ComboBox setor:
            if(strgSetor.equals("indefinido")){
                lbsetor.setText("Setor*:");
                lbsetor.setForeground(java.awt.Color.red);
                erro=1;
            }
            else{
                lbsetor.setText("Setor:");
                lbsetor.setForeground(java.awt.Color.white);
            }
            //ComboBox roça:
            if(strgRoca.equals("indefinido")){
                lbroca.setText("Roça*:");
                lbroca.setForeground(java.awt.Color.red);
                erro=1;
            }
            else{
                lbroca.setText("Roça:");
                lbroca.setForeground(java.awt.Color.white);
            }
            
            //Verifica se o campo data está vazio:
            try{
                int test;
                test = Integer.parseInt(fmtxtnasc.getText().substring(9));
                
            }
            catch(Exception error){
                lbnasc.setText("Data de Nascimento*:");
                lbnasc.setForeground(java.awt.Color.red);
                vzerro=1;
            }
            if(vzerro==0){
            //Verifica se a data é válida:
            dia = fmtxtnasc.getText().substring(0,2);
            mes = fmtxtnasc.getText().substring(3, 5);
            ano = fmtxtnasc.getText().substring(6, 10);

            d = Integer.parseInt(dia);
            m = Integer.parseInt(mes);
            a = Integer.parseInt(ano);
            
            
            if((d<1 || d>31 || m<1 || m>12 || a<1910 || a>2019)){
                dterro = 1;
            }

            else if((m==4 || m==6 || m==9 || m==11) && d>30 ){
                dterro = 1;
            }

            else if(m==2){
                if((a%4==0 && a%100!=0 || a%400==0) && d>29 ){
                    dterro = 1;
                }
                else if(a%4!=0 && d>28){
                    dterro = 1;
                }
            }
            if(dterro==1){
                lbnasc.setText("Data de Nascimento*:");
                lbnasc.setForeground(java.awt.Color.red);
                fmtxtnasc.setText(null);
                erro=1;
            }
            else{
                lbnasc.setText("Data de Nascimento:");
                lbnasc.setForeground(java.awt.Color.white);
            }
            }
            
            
        try {
            //Verifica se o cpf já consta no bd:
            if(daoTeste.RepeticaoCpfMeieiro(fmtxtcpf.getText())){
                lbcpf.setText("CPF*:");
                lbcpf.setForeground(java.awt.Color.red);
                erro = 1;
                fmtxtcpf.setText(null);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TelaCadastroMeieiros.class.getName()).log(Level.SEVERE, null, ex);
        }
            //Valida o cpf:
            ValidadorCPF pf = new ValidadorCPF(fmtxtcpf.getText());
            if (pf.isCPF()){
                lbcpf.setText("CPF:");
                lbcpf.setForeground(java.awt.Color.white);
            }
            
            else { 
                lbcpf.setText("CPF*:");
                lbcpf.setForeground(java.awt.Color.red);
                erro = 1;
                fmtxtcpf.setText(null);
            }
            //valida o Nº de telefone
            LoginDAO fone = new LoginDAO();
            if (fone.isTelefone(fmtxtfone.getText())) {
                lbfone.setText("Telefone:");
                lbfone.setForeground(java.awt.Color.white);
            }
            else{
                lbfone.setText("Telefone*:");
                lbfone.setForeground(java.awt.Color.red);
                erro = 1;
            }
            //verifica o campo RG:
            if(txtrg.getText().length() > 15){
                lbrg.setText("RG*:");
                lbrg.setForeground(java.awt.Color.red);
                erro=1;
            }
            else{
            try{
                intrg = Integer.parseInt(txtrg.getText());
                lbrg.setText("RG:");
                lbrg.setForeground(java.awt.Color.white);
            }
            catch(NumberFormatException | HeadlessException error){
            lbrg.setText("RG*:");
            lbrg.setForeground(java.awt.Color.red);
            erro=1;
            }
            }
        //Fim da verificação de erros;
        
        String cbSel = cbRoca.getSelectedItem().toString();
        //
        String cbSel2 = cbSetor.getSelectedItem().toString();
        //numeros randomicos aqui
        Random gerador = new Random();
        //set texto aqui

        String stNgerado;
            int Ngerado1 = gerador.nextInt(9);
            int Ngerado2 = gerador.nextInt(9);
            int Ngerado3 = gerador.nextInt(9);
            int Ngerado4 = gerador.nextInt(9);
        
            stNgerado = ""+Ngerado1+Ngerado2+Ngerado3+Ngerado4;
        //campo nome arquivo
        CodigoQr.setText(cbSel+cbSel2+stNgerado);
        //campo do qr
        
        ////
        String nome,sexo,cpf,nascimento,rg,roca,setor,celular,codigoQR,link;
        nome = txtnome.getText();
        cpf = fmtxtcpf.getText();
        rg = txtrg.getText();
        nascimento = fmtxtnasc.getText();
        celular = fmtxtfone.getText();
        sexo = cbSexo.getSelectedItem().toString();
        roca = cbRoca.getSelectedItem().toString();
        setor = cbSetor.getSelectedItem().toString();
        codigoQR = cbSel+cbSel2+stNgerado;
        link = "www.harpiasoftwares.com";
        
        
        QRtexto.setText(
                "NOME: " + nome +"\n"
              + "CPF: " + cpf + "\n"
              + "RG: " + rg + "\n"
              + "NASCIMENTO: " + nascimento + "\n"
              + "SEXO: " + sexo + "\n"
              + "Fone: " + celular + "\n"
              + "Roça: " + roca + "\n"
              + "Setor: " + setor + "\n"
              + "QR CÓDIGO: " + codigoQR + "\n"
              +  link
                
        );
        
        if(erro==0){
        jLabel15.setVisible(true);
        CodigoQr.setVisible(true);
        BtnSalvar.setVisible(true);
        }
        
    }//GEN-LAST:event_btnpassdataActionPerformed

    private void cbRocaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRocaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbRocaActionPerformed

    private void btnlimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimparActionPerformed
        //limpar:
        txtnome.setText(null);
        txtrg.setText(null);
        fmtxtcpf.setText(null);
        fmtxtnasc.setText(null);
        fmtxtfone.setText(null);
        CodigoQr.setText(null);
        cbSexo.setSelectedIndex(0);
        cbSetor.setSelectedIndex(0);
        cbRoca.setSelectedIndex(0);
        
        lbnome.setText("Nome:");
        lbnome.setForeground(java.awt.Color.white);
        lbnasc.setText("Data de nascimento:");
        lbnasc.setForeground(java.awt.Color.white);
        lbcpf.setText("CPF:");
        lbcpf.setForeground(java.awt.Color.white);
        lbsexo.setText("Sexo:");
        lbsexo.setForeground(java.awt.Color.white);
        lbrg.setText("RG:");
        lbrg.setForeground(java.awt.Color.white);
        lbfone.setText("Telefone:");
        lbfone.setForeground(java.awt.Color.white);
        lbsetor.setText("Setor:");
        lbsetor.setForeground(java.awt.Color.white);
        lbroca.setText("Roça:");
        lbroca.setForeground(java.awt.Color.white);
        
        QRtexto.setText(null);
        lblImagem.setIcon(null);
        
        jLabel15.setVisible(false);
        CodigoQr.setVisible(false);
        BtnSalvar.setVisible(false);
    }//GEN-LAST:event_btnlimparActionPerformed
    
    private void BtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalvarActionPerformed
        // Salvar:
        
        try{
            LoginDAO daoTeste = new LoginDAO();
            erro=0;
            dterro=0;
            vzerro=0; 
            strgSexo= "indefinido"; 
            strgSetor= "indefinido"; 
            strgRoca= "indefinido";
            
            if(cbSexo.getSelectedIndex()!=0){
                strgSexo = cbSexo.getSelectedItem().toString();
            }
            if(cbSetor.getSelectedIndex()!=0){
                strgSetor = cbSetor.getSelectedItem().toString();
            }
            if(cbRoca.getSelectedIndex()!=0){
                strgRoca = cbRoca.getSelectedItem().toString();
            }
            
            //Verifica se há algum campo em branco:
            //campo nome:
            if(txtnome.getText().isEmpty() || txtnome.getText().length()>50){
                lbnome.setText("Nome*:");
                lbnome.setForeground(java.awt.Color.red);
                
                vzerro = 1;
            }
            else{
                lbnome.setText("Nome:");
                lbnome.setForeground(java.awt.Color.white);
            } 
            //ComboBox sexo:
            if(strgSexo.equals("indefinido")){
                lbsexo.setText("Sexo*:");
                lbsexo.setForeground(java.awt.Color.red);
                erro=1;
            }
            else{
                lbsexo.setText("Sexo:");
                lbsexo.setForeground(java.awt.Color.white);
            }
            //ComboBox setor:
            if(strgSetor.equals("indefinido")){
                lbsetor.setText("Setor*:");
                lbsetor.setForeground(java.awt.Color.red);
                erro=1;
            }
            else{
                lbsetor.setText("Setor:");
                lbsetor.setForeground(java.awt.Color.white);
            }
            //ComboBox roça:
            if(strgRoca.equals("indefinido")){
                lbroca.setText("Roça*:");
                lbroca.setForeground(java.awt.Color.red);
                erro=1;
            }
            else{
                lbroca.setText("Roça:");
                lbroca.setForeground(java.awt.Color.white);
            }
            
            //Verifica se o campo data está vazio:
            try{
                int test;
                test = Integer.parseInt(fmtxtnasc.getText().substring(9));
                
            }
            catch(Exception error){
                lbnasc.setText("Data de Nascimento*:");
                lbnasc.setForeground(java.awt.Color.red);
                vzerro=1;
            }
            if(vzerro==0){
            //Verifica se a data é válida:
            dia = fmtxtnasc.getText().substring(0,2);
            mes = fmtxtnasc.getText().substring(3, 5);
            ano = fmtxtnasc.getText().substring(6, 10);

            d = Integer.parseInt(dia);
            m = Integer.parseInt(mes);
            a = Integer.parseInt(ano);
            
            
            if((d<1 || d>31 || m<1 || m>12 || a<1910 || a>2019)){
                dterro = 1;
            }

            else if((m==4 || m==6 || m==9 || m==11) && d>30 ){
                dterro = 1;
            }

            else if(m==2){
                if((a%4==0 && a%100!=0 || a%400==0) && d>29 ){
                    dterro = 1;
                }
                else if(a%4!=0 && d>28){
                    dterro = 1;
                }
            }
            if(dterro==1){
                lbnasc.setText("Data de Nascimento*:");
                lbnasc.setForeground(java.awt.Color.red);
                fmtxtnasc.setText(null);
                erro=1;
            }
            else{
                lbnasc.setText("Data de Nascimento:");
                lbnasc.setForeground(java.awt.Color.white);
            }
            }
            
            
            //Verifica se o cpf já consta no bd:
            if(daoTeste.RepeticaoCpfMeieiro(fmtxtcpf.getText())){
                lbcpf.setText("CPF*:");
                lbcpf.setForeground(java.awt.Color.red);
                erro = 1;
                fmtxtcpf.setText(null);
            }
            //Valida o cpf:
            ValidadorCPF pf = new ValidadorCPF(fmtxtcpf.getText());
            if (pf.isCPF()){
                lbcpf.setText("CPF:");
                lbcpf.setForeground(java.awt.Color.white);
            }
            
            else { 
                lbcpf.setText("CPF*:");
                lbcpf.setForeground(java.awt.Color.red);
                erro = 1;
                fmtxtcpf.setText(null);
            }
            //valida o Nº de telefone
            LoginDAO fone = new LoginDAO();
            if (fone.isTelefone(fmtxtfone.getText())) {
                lbfone.setText("Telefone:");
                lbfone.setForeground(java.awt.Color.white);
            }
            else{
                lbfone.setText("Telefone*:");
                lbfone.setForeground(java.awt.Color.red);
                erro = 1;
            }
            //verifica o campo RG:
            if(txtrg.getText().length() > 15){
                lbrg.setText("RG*:");
                lbrg.setForeground(java.awt.Color.red);
                erro=1;
            }
            else{
            try{
                intrg = Integer.parseInt(txtrg.getText());
                lbrg.setText("RG:");
                lbrg.setForeground(java.awt.Color.white);
            }
            catch(NumberFormatException | HeadlessException error){
            lbrg.setText("RG*:");
            lbrg.setForeground(java.awt.Color.red);
            erro=1;
            }
            }
            //Guarda os dados em um obj Login:
            CadastroMeieirosBEAB obj = new CadastroMeieirosBEAB();
            obj.setQrcode(CodigoQr.getText());
            obj.setNome(txtnome.getText());
            obj.setCpf(fmtxtcpf.getText());
            obj.setSetor(strgSetor);
            obj.setRg(txtrg.getText());
            obj.setSexo(strgSexo);
            obj.setNascimento(fmtxtnasc.getText());
            obj.setRoca(strgRoca);
            obj.setCelular(fmtxtfone.getText());
            
            CadastroMeieirosDAO dao = new CadastroMeieirosDAO();

            if(erro==0){
                dao.CriarUsuario(obj);
                
                
                
        // Botão Gerar QRcode:
        
        strgSetor= "indefinido"; 
        strgRoca= "indefinido";
        
        if(cbSetor.getSelectedIndex()!=0){
            strgSetor = cbSetor.getSelectedItem().toString();
        }
        if(cbRoca.getSelectedIndex()!=0){
            strgRoca = cbRoca.getSelectedItem().toString();
        }
        
        if(strgSetor.equals("indefinido") || strgRoca.equals("indefinido")){
            JOptionPane.showMessageDialog(null, "Erro ao gerar o QRcode!\n\nVerifique se há campos em branco"
                        ,"QRcode biuld fail", 
                        JOptionPane.ERROR_MESSAGE);
        }
        else{
        int size = 125;

        String n = CodigoQr.getText();
        String nomeArquivo = n+".png"; // nome do arquivo
        try {
            try (FileOutputStream r = new FileOutputStream(nomeArquivo)) {
                ByteArrayOutputStream out = QRCode.from(QRtexto.getText())
                        .to(ImageType.PNG)
                        .withSize(size,size)
                        .stream();
                r.write(out.toByteArray());
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TelaCadastroMeieiros.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TelaCadastroMeieiros.class.getName()).log(Level.SEVERE, null, ex);
        }
        String nomeArquivoQrCode = nomeArquivo;
        try {
            BufferedImage jardel = ImageIO.read(new FileInputStream(nomeArquivoQrCode));
            lblImagem.setIcon(new ImageIcon(jardel));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TelaCadastroMeieiros.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TelaCadastroMeieiros.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
            JOptionPane.showMessageDialog(null, "Meieiro Cadastrado com Sucesso!");
        
            }
            else{
                JOptionPane.showMessageDialog(null, "Os dados não foram cadastrados!\n\nVerifique se há campos em branco"
                        + "\nou dados inválidos.\n\nOs campos a serem corrigidos \nsão indicados em vermelho."
                        ,"Database notification!", 
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(NumberFormatException | HeadlessException error){
            JOptionPane.showMessageDialog(null, "Erro ao criar login, Dados não suportados!","Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(TelaCadastroMeieiros.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_BtnSalvarActionPerformed

    private void fmtxtfoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fmtxtfoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fmtxtfoneActionPerformed

    private void cbSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSexoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSexoActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // !!Janela
        setExtendedState(MAXIMIZED_BOTH);
    }//GEN-LAST:event_formFocusGained

    private void CodigoQrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodigoQrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CodigoQrActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnSalvar;
    private javax.swing.JTextField CodigoQr;
    private javax.swing.JTextArea QRtexto;
    private javax.swing.JButton btnlimpar;
    private javax.swing.JButton btnpassdata;
    private javax.swing.JComboBox<String> cbRoca;
    private javax.swing.JComboBox<String> cbSetor;
    private javax.swing.JComboBox<String> cbSexo;
    private javax.swing.JFormattedTextField fmtxtcpf;
    private javax.swing.JFormattedTextField fmtxtfone;
    private javax.swing.JFormattedTextField fmtxtnasc;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbcpf;
    private javax.swing.JLabel lbfone;
    private javax.swing.JLabel lblImagem;
    private javax.swing.JLabel lbnasc;
    private javax.swing.JLabel lbnome;
    private javax.swing.JLabel lbrg;
    private javax.swing.JLabel lbroca;
    private javax.swing.JLabel lbsetor;
    private javax.swing.JLabel lbsexo;
    private javax.swing.JTextField txtnome;
    private javax.swing.JTextField txtrg;
    // End of variables declaration//GEN-END:variables

    private void setExtendedState(int MAXIMIZED_BOTH) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}

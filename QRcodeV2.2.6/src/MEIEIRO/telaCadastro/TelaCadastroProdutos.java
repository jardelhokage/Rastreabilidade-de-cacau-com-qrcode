/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MEIEIRO.telaCadastro;

import DAO.CadastroMeieirosDAO;
import DAO.CadastroProdutosDAO;
import Javabeans.CadastroMeieirosBEAB;
import Javabeans.CadastroMeieirosPROD;
import Javabeans.CadastroProdutos;
import java.awt.Color;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.HeadlessException;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.glxn.qrgen.QRCode;
import net.glxn.qrgen.image.ImageType;

/**
 *
 * @author jarde
 * @author Tiago Fochesatto
 */
public class TelaCadastroProdutos extends javax.swing.JInternalFrame {
    
    /**
     * Creates new form TelaCadastroAluno
     */
    public TelaCadastroProdutos() {
        initComponents();
    }
    //variáveis auxiliares:
    int cod;
    String Qrcode, nome, cpf, rg, nasc, sexo, fone, roca, setor,codigoQR, safra;
    
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbTipo = new javax.swing.JComboBox<String>();
        lbtipo = new javax.swing.JLabel();
        lbquant = new javax.swing.JLabel();
        txtquant = new javax.swing.JTextField();
        lbcot = new javax.swing.JLabel();
        txtlote = new javax.swing.JTextField();
        lbdata = new javax.swing.JLabel();
        txtcot = new javax.swing.JTextField();
        fmtxtdata = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        fmtxtvalor = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        qrtxtprod = new javax.swing.JTextArea();
        btnpassdata = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblImagem = new javax.swing.JLabel();
        btnlimpar = new javax.swing.JButton();
        BtnSalvar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        CodigoQr = new javax.swing.JTextField();
        btnpassdata1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        qrtxtMro = new javax.swing.JTextArea();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cadastro de Produção");
        setPreferredSize(new java.awt.Dimension(718, 571));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(34, 41, 50));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados de Produção", javax.swing.border.TitledBorder.TRAILING, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Google Sans", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setAutoscrolls(true);
        jPanel1.setFocusable(false);

        cbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "        ", "Cacau comum", "Cacau fino" }));
        cbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoActionPerformed(evt);
            }
        });

        lbtipo.setForeground(new java.awt.Color(255, 255, 255));
        lbtipo.setText("Tipo do produto:");

        lbquant.setForeground(new java.awt.Color(255, 255, 255));
        lbquant.setText("Quantidade(kg):");

        txtquant.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtquantFocusLost(evt);
            }
        });

        lbcot.setForeground(new java.awt.Color(255, 255, 255));
        lbcot.setText("Cotação (R$/kg):");

        txtlote.setEditable(false);

        lbdata.setForeground(new java.awt.Color(255, 255, 255));
        lbdata.setText("Data");

        txtcot.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcotFocusLost(evt);
            }
        });

        try {
            fmtxtdata.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nº de lote:");

        fmtxtvalor.setEditable(false);
        fmtxtvalor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Valor:");

        qrtxtprod.setEditable(false);
        qrtxtprod.setBackground(new java.awt.Color(0, 0, 0));
        qrtxtprod.setColumns(20);
        qrtxtprod.setForeground(new java.awt.Color(102, 255, 0));
        qrtxtprod.setRows(5);
        jScrollPane2.setViewportView(qrtxtprod);

        btnpassdata.setText("PASSAR DADOS");
        btnpassdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpassdataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbquant)
                    .addComponent(lbtipo)
                    .addComponent(lbcot)
                    .addComponent(cbTipo, 0, 166, Short.MAX_VALUE)
                    .addComponent(txtquant)
                    .addComponent(txtcot))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(lbdata)
                    .addComponent(txtlote, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(fmtxtvalor)
                    .addComponent(fmtxtdata))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnpassdata)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbtipo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbquant)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtquant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbcot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbdata)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fmtxtdata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fmtxtvalor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtlote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnpassdata)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(34, 41, 50));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "QR code", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        lblImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lb5.gif"))); // NOI18N
        lblImagem.setText(".");
        lblImagem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        btnlimpar.setText("LIMPAR");
        btnlimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimparActionPerformed(evt);
            }
        });

        BtnSalvar.setText("SALVAR");
        BtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BtnSalvar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnlimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(41, 41, 41))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnlimpar)
                .addGap(18, 18, 18)
                .addComponent(BtnSalvar)
                .addContainerGap(127, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(34, 41, 50));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Meieiro", javax.swing.border.TitledBorder.TRAILING, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Google Sans", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setAutoscrolls(true);
        jPanel3.setFocusable(false);

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("CÓDIGO DO FUNCIONÁRIO");

        CodigoQr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodigoQrActionPerformed(evt);
            }
        });

        btnpassdata1.setText("PESQUISAR");
        btnpassdata1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpassdata1ActionPerformed(evt);
            }
        });

        qrtxtMro.setEditable(false);
        qrtxtMro.setBackground(new java.awt.Color(0, 0, 0));
        qrtxtMro.setColumns(20);
        qrtxtMro.setForeground(new java.awt.Color(102, 255, 0));
        qrtxtMro.setRows(5);
        jScrollPane3.setViewportView(qrtxtMro);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(CodigoQr, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnpassdata1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CodigoQr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnpassdata1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnlimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimparActionPerformed
        limpar:
        
        lblImagem.setIcon(null);
        CodigoQr.setText(null);
        qrtxtMro.setText(null);
        qrtxtprod.setText(null);
        
        txtquant.setText(null);
        txtcot.setText(null);
        fmtxtdata.setText(null);
        fmtxtvalor.setText(null);
        txtlote.setText(null);
        cbTipo.setSelectedIndex(0);
        
        
        
    }//GEN-LAST:event_btnlimparActionPerformed
    
    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // !!Janela
        setExtendedState(MAXIMIZED_BOTH);
    }//GEN-LAST:event_formFocusGained

    private void btnpassdata1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpassdata1ActionPerformed
        //Passar Dados:
        try{
        Qrcode = CodigoQr.getText();
        List dados = new ArrayList<>();
        
        
        //Executa o select:
            CadastroProdutosDAO dao = new CadastroProdutosDAO();
            List<CadastroMeieirosPROD> listaDaoMeieiro = dao.ListarAlunosPorNomeouMat(Qrcode);
            listaDaoMeieiro.stream().forEach((v) -> {
            dados.add(0, v.getNome());
            dados.add(1, v.getCpf());
            dados.add(2, v.getRg());
            dados.add(3, v.getNascimento());
            dados.add(4, v.getSexo());
            dados.add(5, v.getCelular());
            dados.add(6, v.getRoca());
            dados.add(7, v.getSetor());
            dados.add(8, v.getQrcode());
            dados.add(9, v.getCod());
            });
            
            
            nome = dados.get(0).toString();
            cpf = dados.get(1).toString();
            rg = dados.get(2).toString();
            nasc = dados.get(3).toString();
            sexo = dados.get(4).toString();
            fone = dados.get(5).toString();
            roca = dados.get(6).toString();
            setor = dados.get(7).toString();
            codigoQR = dados.get(8).toString();
            cod = Integer.parseInt((String) dados.get(9).toString());
            
        //Coloca as informações do meieiro no campo de texto:
        qrtxtMro.setText(
               
                "CÓDIGO: " + cod +"\n"
              + "NOME: " + nome +"\n"
              + "CPF: " + cpf + "\n"
              + "RG: " + rg + "\n"
              + "NASCIMENTO: " + nasc + "\n"
              + "SEXO: " + sexo + "\n"
              + "FONE: " + fone + "\n"
              + "ROÇA: " + roca + "\n"
              + "SETOR: " + setor + "\n"
              + "QR CÓDIGO: " + codigoQR + "\n"
                
        );
        }
        catch(Exception error){
            JOptionPane.showMessageDialog(null, "Meieiro não encontrado! ","Error", JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_btnpassdata1ActionPerformed

    private void CodigoQrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodigoQrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CodigoQrActionPerformed

    private void cbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTipoActionPerformed

    private void btnpassdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpassdataActionPerformed
        //tratamento de erro:
        int erro=0, intsafra;
        float quant, cot, vlr;
        String stvlr, stquant, stcot;
        
        
        
        if(CodigoQr.getText().isEmpty()){
             JOptionPane.showMessageDialog(null, "Selecione o meieiro!","Error", JOptionPane.ERROR_MESSAGE);
             erro=1;
        }
        if(cbTipo.getSelectedIndex()==0){
            lbtipo.setForeground(Color.red);
            lbtipo.setText("Tipo de produto*:");
            erro=1;
        }
        else{
            lbtipo.setForeground(Color.white);
            lbtipo.setText("Tipo de produto:");
        }
        safra = fmtxtdata.getText().substring(6, 10);
        
        try{
            intsafra = Integer.parseInt(safra);
            lbdata.setForeground(Color.white);
            lbdata.setText("Data:");
        }
        catch(NumberFormatException | HeadlessException error){
            lbdata.setForeground(Color.red);
            lbdata.setText("Data*:");
            erro = 1;
        }
        
        stquant = txtquant.getText().replace(",", ".");
        stcot = txtcot.getText().replace(",", ".");
        
        //quantidade e cotação:
        
        try{
            quant = Float.parseFloat(stquant);
            lbquant.setForeground(Color.white);
            lbquant.setText("Quantidade(kg):");
        }
        catch(NumberFormatException | HeadlessException error){
            lbquant.setForeground(Color.red);
            lbquant.setText("Quantidade(kg)*:");
            erro = 1;
            txtquant.setText(null);
        }
        try{
            cot = Float.parseFloat(stcot);
            lbcot.setForeground(Color.white);
            lbcot.setText("Cotação(R$/kg):");
        }
        catch(NumberFormatException | HeadlessException error){
            lbcot.setForeground(Color.red);
            lbcot.setText("Cotação(R$/kg)*:");
            erro = 1;
            txtcot.setText(null);
        }
        
        if(erro==0){
            //numeros randomicos aqui
            Random gerador = new Random();
            
            //set texto aqui
            String stNgerado;
            int Ngerado1 = gerador.nextInt(9);
            int Ngerado2 = gerador.nextInt(9);
            int Ngerado3 = gerador.nextInt(9);
            int Ngerado4 = gerador.nextInt(9);
        
            stNgerado = ""+Ngerado1+Ngerado2+Ngerado3+Ngerado4;
            
            if(fmtxtdata.getText().isEmpty()){
                 JOptionPane.showMessageDialog(null, "Erro fmtxtdata vazio","Error", JOptionPane.ERROR_MESSAGE);
            }
            else{
            
                //campo nome arquivo
                txtlote.setText(codigoQR+safra+stNgerado);
            }
        }
        
        //pega os valores para setar o campo de texto:
        
        String tipo="indefinido", data, valor, num;
        
        if(cbTipo.getSelectedIndex()!=0){
        tipo = cbTipo.getSelectedItem().toString();
        }
        stquant = txtquant.getText();
        stcot = txtcot.getText();
        data = fmtxtdata.getText();
        valor = fmtxtvalor.getText();
        num = txtlote.getText();
        
        qrtxtprod.setText(
        "TIPO DO PRODUTO: " + tipo +"\n"
        + "QUANTIDADE: " + stquant + "\n"
        + "COTAÇÃO: " + stcot + "\n"
        + "DATA: " + data + "\n"
        + "VALOR: " + valor + "\n"
        + "Nº DO LOTE: " + num + "\n"
        + "CÓDIGO DO MEIEIRO: " + cod + "\n"
        
        );
    }//GEN-LAST:event_btnpassdataActionPerformed

    private void txtcotFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcotFocusLost
        // TODO add your handling code here:
        int erro=0;
        float quant, cot, vlr;
        String stvlr, stquant, stcot;
        
        stquant = txtquant.getText().replace(",", ".");
        stcot = txtcot.getText().replace(",", ".");
        
        //tratamento de erro:
        if(txtquant.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Erro txtquant vazio","Error", JOptionPane.ERROR_MESSAGE);
            erro=1;
        }
        try{
            quant = Float.parseFloat(stquant);
            cot = Float.parseFloat(stcot);
        }
        catch(NumberFormatException | HeadlessException error){
            if(erro==1){
            }
            else{
            JOptionPane.showMessageDialog(null, "Insira apenas números","Error", JOptionPane.ERROR_MESSAGE);
            erro = 1;
            txtquant.setText(null);
            txtcot.setText(null);
            }
        }
        
        if(erro==0){
        quant = Float.parseFloat(stquant);
        cot = Float.parseFloat(stcot);
        vlr = quant*cot;
        BigDecimal bdvlr = new BigDecimal(vlr).setScale(2, RoundingMode.HALF_EVEN);
        
        stvlr = "R$: "+bdvlr.doubleValue();
        
        fmtxtvalor.setText(stvlr);
        }
    }//GEN-LAST:event_txtcotFocusLost

    private void txtquantFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtquantFocusLost
        // TODO add your handling code here:
        int erro=0;
        float quant=0, cot=0, vlr=0;
        String stvlr, stquant, stcot;
        
        stquant = txtquant.getText().replace(",", ".");
        stcot = txtcot.getText().replace(",", ".");
        
        //tratamento de erro:
        if(txtcot.getText().isEmpty()){
            erro=1;
        }
        try{
            quant = Float.parseFloat(stquant);
            cot = Float.parseFloat(stcot);
        }
        catch(NumberFormatException | HeadlessException error){
            if(erro==1){
            }
            else{
            erro = 1;
            }
        }
    }//GEN-LAST:event_txtquantFocusLost

    private void BtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalvarActionPerformed
        // Salvar:
        //tratamento de erro:
        int erro=0, intsafra;
        float quant, cot, vlr;
        String stvlr, stquant, stcot;
        
        
        
        if(CodigoQr.getText().isEmpty()){
             JOptionPane.showMessageDialog(null, "Selecione o meieiro!","Error", JOptionPane.ERROR_MESSAGE);
             erro=1;
        }
        if(cbTipo.getSelectedIndex()==0){
            lbtipo.setForeground(Color.red);
            lbtipo.setText("Tipo de produto*:");
            erro=1;
        }
        else{
            lbtipo.setForeground(Color.white);
            lbtipo.setText("Tipo de produto:");
        }
        safra = fmtxtdata.getText().substring(6, 10);
        
        try{
            intsafra = Integer.parseInt(safra);
            lbdata.setForeground(Color.white);
            lbdata.setText("Data:");
        }
        catch(NumberFormatException | HeadlessException error){
            lbdata.setForeground(Color.red);
            lbdata.setText("Data*:");
            erro = 1;
        }
        
        stquant = txtquant.getText().replace(",", ".");
        stcot = txtcot.getText().replace(",", ".");
        
        //quantidade e cotação:
        
        try{
            quant = Float.parseFloat(stquant);
            lbquant.setForeground(Color.white);
            lbquant.setText("Quantidade(kg):");
        }
        catch(NumberFormatException | HeadlessException error){
            lbquant.setForeground(Color.red);
            lbquant.setText("Quantidade(kg)*:");
            erro = 1;
            txtquant.setText(null);
        }
        try{
            cot = Float.parseFloat(stcot);
            lbcot.setForeground(Color.white);
            lbcot.setText("Cotação(R$/kg):");
        }
        catch(NumberFormatException | HeadlessException error){
            lbcot.setForeground(Color.red);
            lbcot.setText("Cotação(R$/kg)*:");
            erro = 1;
            txtcot.setText(null);
        }
        
        if(erro==0){
            //numeros randomicos aqui
            Random gerador = new Random();
            
            //set texto aqui
            String stNgerado;
            int Ngerado1 = gerador.nextInt(9);
            int Ngerado2 = gerador.nextInt(9);
            int Ngerado3 = gerador.nextInt(9);
            int Ngerado4 = gerador.nextInt(9);
        
            stNgerado = ""+Ngerado1+Ngerado2+Ngerado3+Ngerado4;
            
            if(fmtxtdata.getText().isEmpty()){
                 JOptionPane.showMessageDialog(null, "Erro fmtxtdata vazio","Error", JOptionPane.ERROR_MESSAGE);
            }
            else{
            
                //campo nome arquivo
                txtlote.setText(codigoQR+safra+stNgerado);
            }
        }
        
        //Guarda os dados em um obj cad:
            CadastroProdutos obj = new CadastroProdutos();
            obj.setCod(cod);
            obj.setTipo(cbTipo.getSelectedItem().toString());
            obj.setQuant(txtquant.getText());
            obj.setCot(txtcot.getText());
            obj.setData(fmtxtdata.getText());
            obj.setVlr(fmtxtvalor.getText());
            obj.setLote(txtlote.getText());
            
            CadastroProdutosDAO dao = new CadastroProdutosDAO();

            if(erro==0){
                dao.CadastraProduto(obj);
                
            
                 // Botão Gerar QRcode:
        //int size = 125; //tamanho da img do qr
        //int i = Integer.parseInt(str);
        int size = 125;
        
        String n = txtlote.getText();
        String nomeArquivo = n+".png"; // nome do arquivo
        try {
            try (FileOutputStream r = new FileOutputStream(nomeArquivo)) {
                ByteArrayOutputStream out = QRCode.from(qrtxtprod.getText())
                        .to(ImageType.PNG)
                        .withSize(size,size)
                        .stream();
                r.write(out.toByteArray());
            }
            JOptionPane.showMessageDialog(null, "Gerado com sucesso");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TelaCadastroProdutos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TelaCadastroProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }
        String nomeArquivoQrCode = nomeArquivo;
        try {
            BufferedImage jardel = ImageIO.read(new FileInputStream(nomeArquivoQrCode));
            lblImagem.setIcon(new ImageIcon(jardel));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TelaCadastroProdutos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TelaCadastroProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, "Produto Cadastrado com Sucesso!");
            }
            else{
                JOptionPane.showMessageDialog(null, "Os dados não foram cadastrados!\n\nVerifique se há campos em branco"
                        + "\nou dados inválidos.\n\nOs campos a serem corrigidos \nsão indicados em vermelho."
                        ,"Database notification!", 
                        JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_BtnSalvarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnSalvar;
    private javax.swing.JTextField CodigoQr;
    private javax.swing.JButton btnlimpar;
    private javax.swing.JButton btnpassdata;
    private javax.swing.JButton btnpassdata1;
    private javax.swing.JComboBox<String> cbTipo;
    private javax.swing.JFormattedTextField fmtxtdata;
    private javax.swing.JFormattedTextField fmtxtvalor;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbcot;
    private javax.swing.JLabel lbdata;
    private javax.swing.JLabel lblImagem;
    private javax.swing.JLabel lbquant;
    private javax.swing.JLabel lbtipo;
    private javax.swing.JTextArea qrtxtMro;
    private javax.swing.JTextArea qrtxtprod;
    private javax.swing.JTextField txtcot;
    private javax.swing.JTextField txtlote;
    private javax.swing.JTextField txtquant;
    // End of variables declaration//GEN-END:variables

    private void setExtendedState(int MAXIMIZED_BOTH) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
